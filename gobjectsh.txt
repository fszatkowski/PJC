#ifndef GOBJECTS_H
#define GOBJECTS_H

#include <QGraphicsItem>
#include "objects.h"
#include <QPainter>


class CGObject :public QGraphicsItem
{
protected:
    CObject *object;
    CMap *map;
public:
    CGObject(CObject *o);
    CObject* getCObject();
    virtual void advance() = 0;
    virtual QRectF boundingRect() const = 0;
    virtual void paint(QPainter *painter, const QStyleOptionGraphicsItem *option,
                       QWidget *widget) = 0;
};

const int obstacle_width=30;
const int obstacle_height=50;

class CGObstacle :public CGObject
{
public:
    CGObstacle(CObject *o);
    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option,
               QWidget *widget) override;
    QRectF boundingRect() const override;
    void advance() override;
};

const int crobot_width = 40;
const int crobot_height = 30;

class CGCleaningRobot :public CGObject
{
public:
    CGCleaningRobot(CObject *o);
    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option,
               QWidget *widget) override;
    QRectF boundingRect() const override;
    void advance() override;
    QPainterPath shape() const override;
};

class CGDirt :public CGObject
{
public:
    CGDirt(CObject *o);
    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option,
               QWidget *widget) override;
    QRectF boundingRect() const override;
    void advance() override;
    QPainterPath shape() const override;
};

#endif // GOBJECTS_H
